{"version":3,"file":"index.es.js","sources":["../src/index.js"],"sourcesContent":["import React, { useState } from 'react'\nconst Emojis = require('./emojis.json');\n\nexport const useHashEmoji = (str) => {\n  let [strState] = useState(str);\n  var hashedString = hashCode(strState);\n  return convertToEmoji(hashedString);\n}\n\nconst hashCode = (str) => {\n  if (Array.prototype.reduce){\n      return str.split(\"\").reduce(function(a,b){a=((a<<5)-a)+b.charCodeAt(0);return a&a},0);              \n  } \n  var hash = 0;\n  if (str.length === 0) return hash;\n  for (var i = 0; i < str.length; i++) {\n      var character  = str.charCodeAt(i);\n      hash  = ((hash<<5)-hash)+character;\n      hash = hash & hash; //Convert to 32bit integer\n  }\n  return hash;\n}\n\nconst convertToEmoji = (hStr, hashLength = 4) => {\n  const hexHash = hexEncode(hStr.toString());\n  const decimalHash = parseInt(hexHash, 16);\n  let emojiIndex = decimalHash % Math.pow(Emojis.length, hashLength);\n\n  let emojiString = '';\n  for (let ii = 0; ii < hashLength; ii++) {\n    emojiString = `${Emojis[emojiIndex % Emojis.length]}${emojiString}`;\n    emojiIndex = Math.floor(emojiIndex / Emojis.length);\n  }\n  \n  return emojiString;\n  \n}\n\nconst hexEncode = (str) =>{\n  var hex, i;\n\n  var result = \"\";\n  for (i=0; i<str.length; i++) {\n      hex = str.charCodeAt(i).toString(16);\n      result += (\"000\"+hex).slice(-4);\n  }\n\n  return result\n}"],"names":["Emojis","require","useHashEmoji","str","strState","useState","hashedString","hashCode","convertToEmoji","Array","prototype","reduce","split","a","b","charCodeAt","hash","length","i","character","hStr","hashLength","hexHash","hexEncode","toString","decimalHash","parseInt","emojiIndex","Math","pow","emojiString","ii","floor","hex","result","slice"],"mappings":";;AACA,MAAMA,MAAM,GAAGC,OAAO,CAAC,eAAD,CAAtB;;MAEaC,YAAY,GAAIC,GAAD,IAAS;AACnC,MAAI,CAACC,QAAD,IAAaC,QAAQ,CAACF,GAAD,CAAzB;AACA,MAAIG,YAAY,GAAGC,QAAQ,CAACH,QAAD,CAA3B;AACA,SAAOI,cAAc,CAACF,YAAD,CAArB;AACD;;AAED,MAAMC,QAAQ,GAAIJ,GAAD,IAAS;AACxB,MAAIM,KAAK,CAACC,SAAN,CAAgBC,MAApB,EAA2B;AACvB,WAAOR,GAAG,CAACS,KAAJ,CAAU,EAAV,EAAcD,MAAd,CAAqB,UAASE,CAAT,EAAWC,CAAX,EAAa;AAACD,MAAAA,CAAC,GAAE,CAACA,CAAC,IAAE,CAAJ,IAAOA,CAAR,GAAWC,CAAC,CAACC,UAAF,CAAa,CAAb,CAAb;AAA6B,aAAOF,CAAC,GAACA,CAAT;AAAW,KAA3E,EAA4E,CAA5E,CAAP;AACH;;AACD,MAAIG,IAAI,GAAG,CAAX;AACA,MAAIb,GAAG,CAACc,MAAJ,KAAe,CAAnB,EAAsB,OAAOD,IAAP;;AACtB,OAAK,IAAIE,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGf,GAAG,CAACc,MAAxB,EAAgCC,CAAC,EAAjC,EAAqC;AACjC,QAAIC,SAAS,GAAIhB,GAAG,CAACY,UAAJ,CAAeG,CAAf,CAAjB;AACAF,IAAAA,IAAI,GAAK,CAACA,IAAI,IAAE,CAAP,IAAUA,IAAX,GAAiBG,SAAzB;AACAH,IAAAA,IAAI,GAAGA,IAAI,GAAGA,IAAd,CAHiC;AAIpC;;AACD,SAAOA,IAAP;AACD,CAZD;;AAcA,MAAMR,cAAc,GAAG,CAACY,IAAD,EAAOC,UAAU,GAAG,CAApB,KAA0B;AAC/C,QAAMC,OAAO,GAAGC,SAAS,CAACH,IAAI,CAACI,QAAL,EAAD,CAAzB;AACA,QAAMC,WAAW,GAAGC,QAAQ,CAACJ,OAAD,EAAU,EAAV,CAA5B;AACA,MAAIK,UAAU,GAAGF,WAAW,GAAGG,IAAI,CAACC,GAAL,CAAS7B,MAAM,CAACiB,MAAhB,EAAwBI,UAAxB,CAA/B;AAEA,MAAIS,WAAW,GAAG,EAAlB;;AACA,OAAK,IAAIC,EAAE,GAAG,CAAd,EAAiBA,EAAE,GAAGV,UAAtB,EAAkCU,EAAE,EAApC,EAAwC;AACtCD,IAAAA,WAAW,GAAI,GAAE9B,MAAM,CAAC2B,UAAU,GAAG3B,MAAM,CAACiB,MAArB,CAA6B,GAAEa,WAAY,EAAlE;AACAH,IAAAA,UAAU,GAAGC,IAAI,CAACI,KAAL,CAAWL,UAAU,GAAG3B,MAAM,CAACiB,MAA/B,CAAb;AACD;;AAED,SAAOa,WAAP;AAED,CAbD;;AAeA,MAAMP,SAAS,GAAIpB,GAAD,IAAQ;AACxB,MAAI8B,GAAJ,EAASf,CAAT;AAEA,MAAIgB,MAAM,GAAG,EAAb;;AACA,OAAKhB,CAAC,GAAC,CAAP,EAAUA,CAAC,GAACf,GAAG,CAACc,MAAhB,EAAwBC,CAAC,EAAzB,EAA6B;AACzBe,IAAAA,GAAG,GAAG9B,GAAG,CAACY,UAAJ,CAAeG,CAAf,EAAkBM,QAAlB,CAA2B,EAA3B,CAAN;AACAU,IAAAA,MAAM,IAAI,CAAC,QAAMD,GAAP,EAAYE,KAAZ,CAAkB,CAAC,CAAnB,CAAV;AACH;;AAED,SAAOD,MAAP;AACD,CAVD;;;;"}